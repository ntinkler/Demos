apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2018-10-09T03:57:26Z
  generation: 2
  labels:
    app: mongo-express
  name: mongo-express
  namespace: default
  resourceVersion: "17595"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/mongo-express
  uid: 6f744ea2-cb77-11e8-b073-42010a800016
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-express
    spec:
      containers:
      - env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            configMapKeyRef:
              key: ME_CONFIG_MONGODB_ADMINUSERNAME
              name: mongo-express-config
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            configMapKeyRef:
              key: ME_CONFIG_MONGODB_ADMINPASSWORD
              name: mongo-express-config
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
            configMapKeyRef:
              key: ME_CONFIG_MONGODB_SERVER
              name: mongo-express-config
        image: mongo-express:latest
        imagePullPolicy: Always
        name: mongo-express
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-10-09T03:57:30Z
    lastUpdateTime: 2018-10-09T03:57:30Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1